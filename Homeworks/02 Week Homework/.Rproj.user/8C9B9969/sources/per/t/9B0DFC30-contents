---
title: "02 Week Homework"
author: '[Your first name] [Your last name]'
date: "`r Sys.Date()`"
output:
  html_document:
    number_sections: true
    toc: true
    toc_float: true
    toc_depth: 3
---

# Setup {.unnumbered}

**Install the packages you'll need for this assignment if you haven't already.**

```{r setup}
# Install pacman
if (!require("pacman")) install.packages("pacman")
# p_load function loads packages if installed, or install then loads otherwise
pacman::p_load(dplyr, knitr, kableExtra, readr)
```

**Replace the bracketed placeholders for the `Author` in the YAML header with your actual first and last name.**

# Instructions {.unnumbered}

**Each question contains instructions in bold, as you see here. Your responses should be in plain text, as below:**

Hey! Don't put your answers in bold text, please! Thanks!

**There are code blocks like the one below, which you will be instructed to fill in with code to calculate the quantities necessary to answer the question.**

```{r}
# Example code block
```

**Your code should store numerical or tabular answers as objects (e.g., a scalar, a vector, a table) in your environment. Below is an example.**

```{r}
my_calculation <- (4000 - 2000) / log(4000/2000)
my_answer <- round(my_calculation, 0)
```

**Often, you will be asked to write your answer down in plain text below your code block. Below is an example of how you might do this that uses the example calculation and answer code above:**

My answer is `r my_answer`.

**In other cases, you will be asked to print the answer in tabular format before commenting on the results. For example**

```{r}
my_df <- data.frame(x = letters[1:3], y = 1:3, z = (1:3)^2)
knitr::kable(my_df) %>%
  kableExtra::column_spec(2:3, border_left = TRUE)
```

**Commentary below:**

Looks like $z = y^2$.

**Notice that the above answer uses MathJax to render math notation from $\LaTeX$. You may find it useful to write MathJax notation in-line by enclosing $\LaTeX$ in single dollar-sign symbols. Other times, you may want to center an equation with double dollar-sign symbols, as below:**

$$
z = y^2
$$


# Question set 1

**Total available: X point**

## *De facto* Versus *de Jure* population

**Consider (a) your own country, (b) the city you live in. Which is bigger, the *de jure* or the *de facto* population?**


## Digit Preference

**Digit prefer has been quantified in demography using statistics that are based on comparing the size of the enumerated population to the population one would expect to see in the absence of digit preference. Define $V_x=$ enumerated population in age $x$. *Whipple's index* (for digit prefence of ages 25, 30, ..., 60) is defined as,**

$$ W = \frac{\sum_{y=1}^8 V_{20+5y}}{\frac{1}{5}\sum_{x=23}^{62} V_x},$$

**This of the observed/expected form if in reality all $V_x$'s are equal. Give some more general conditions, under which this index still works. (Hint: Consider 5-year intervals [23, 27], [28, 32], ... and assume that $V_x$  is (a) linear in each interval, (b) an odd function around the center of the interval: $V_{25-x}-V_{25}=-(V_{25-x}-V_{25})$ for $x=1,2,$ etc.).**

# Question set 2

## Read in data

Download [WPP data](https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2022_PopulationByAge5GroupSex_Medium.zip) for five year age groups and gender and read into R. 

## Population Pyramid

Build population pyramids for 3 countries and 3 time periods.

# Question set 3.

## Read in the data

Download [WPP data](https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2022_Demographic_Indicators_Medium.zip) and read into R. 

## Compute the CDR for 3 countries from 1950 to 2022

## Compute the CBR for 3 countries from 1950 to 2022

## Age Specific CDR 

Below is R code and data for computing age specific CDR:

```{r,warning=FALSE,message=FALSE}
library(tidyverse)
library(here)

## Total population data
d_male <- read_csv(here("data", "WPP2017_POP_F15_2_ANNUAL_POPULATION_BY_AGE_MALE.csv"), skip = 12)
d_male$sex <- "M"
d_female <- read_csv(here("data", "WPP2017_POP_F15_3_ANNUAL_POPULATION_BY_AGE_FEMALE.csv"), skip = 12)
d_female$sex <- "F"

d <- rbind(d_male, d_female)
rm(d_male, d_female)

d <- d %>% 
  rename(region = `Region, subregion, country or area *`,
         year = `Reference date (as of 1 July)`) %>% 
  select(-Index, -Variant, -Notes, -`Country code`)

head(d)

## Mortality Data
d_male <- read_csv(here("data", "WPP2017_MORT_F04_2_DEATHS_BY_AGE_MALE.csv"), skip = 12)
d_male$sex <- "M"
d_female <- read_csv(here("data", "WPP2017_MORT_F04_3_DEATHS_BY_AGE_FEMALE.csv"), skip = 12)
d_female$sex <- "F"

dm <- rbind(d_male, d_female)
rm(d_male, d_female)

dm <- dm %>% 
  rename(region = `Region, subregion, country or area *`,
         year = Period) %>% 
  mutate(year = as.numeric(substr(year, 1, 4))) %>% 
  select(-Index, -Variant, -Notes, -`Country code`)

head(dm)
```



```{r,warning=FALSE,message=FALSE}
pops <- d %>% 
  filter(region=="Mexico",year==2010) %>% 
  gather(age, pop, -region, -year, -sex) %>% 
  mutate(pop = as.numeric(pop)) %>% 
  group_by(region, year, age) %>% 
  summarise(pop = sum(pop)) %>% 
  mutate(age = as.numeric(age)) %>% 
  filter(age<95)

deaths <- dm %>% 
  filter(region=="Mexico",year==2010) %>% 
  gather(age, deaths, -region, -year, -sex) %>% 
  mutate(deaths = as.numeric(deaths)) %>% 
  group_by(region, year, age) %>% 
  summarise(deaths = sum(deaths)) %>% 
  mutate(age = as.numeric(age)) %>% 
  filter(age<95)

# join these two tibbles and calculate rates

asmr <- pops %>% 
  left_join(deaths) %>% 
  mutate(mx = deaths/pop)

head(asmr)
```

Make a table of ASMR for 3 countries (not Mexico) for 1950, 2000, and 2010. 







